/*Implementar um programa de gerenciamento de high scores. 
O programa deve:
a.	carregar os high scores de um arquivo e mostrar. Cada high score é composto de um nome (max. 10 caracteres) e um inteiro (pontuação)
b.	pedir ao usuário o seu nome e a sua pontuação no jogo. 
c.	posicionar os dados do usuário na tabela de highest scores (max. 5) e regravar no arquivo.*/

#include <iostream>

struct scores
{
	char nome[10];
	int pont;
};

main() 
{
	FILE *high;
	struct scores problema04[5];
	int i, j, auxP;
	char auxN;
	
	high = fopen("C:\\Users\\Borges\\OneDrive\\Unicesumar\\Zap_Linguagem_C\\Problema_04\\Arquivo\\high.txt", "w");

	for(i = 0; i < 5; i++)
	{
		printf("Digite seu nome: ");
		scanf("%s", &problema04[i].nome);
		printf("Digite sua pontuacao: ");
		scanf("%d", &problema04[i].pont);
		printf("\n");
	}
	
	fwrite(&problema04, 100, 1, high);
	
	for(i = 0; i < 5; i++)
	{
	printf("%s, %d\n", problema04[i].nome, problema04[i].pont);
	}
	
	printf("\n\n");
	
	for(i = 0; i < 5; i++)
	{
		for(j = i + 1; j < 5; j++)
		{
			if(problema04[i].pont > problema04[j].pont)
			{
				auxP = problema04[i].pont;
				problema04[i].pont = problema04[j].pont;
				problema04[j].pont = auxP;
				
				auxN = problema04[i].nome;
				problema04[i].nome = problema04[j].nome;
				problema04[j].nome = auxN;
			}
		}
	}
	
	for(i = 0; i < 5; i++)
	{
	printf("%s, %d\n", problema04[i].nome, problema04[i].pont);
	}
	
	return 0;
}
